import React__default, { useState, useEffect, useRef, createElement } from 'react';
import styled, { ThemeProvider } from 'styled-components';

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  padding: ", "px\n    ", "px;\n  background: ", ";\n  img {\n    height: ", "px;\n    border-radius: 50%;\n    margin-right: ", ";\n  }\n  h3 {\n    line-height: ", "px;\n    margin: 0;\n    font-weight: ", ";\n    font-size: ", ";\n  }\n  h5 {\n    font-weight: ", ";\n    margin: 0;\n    font-size: ", ";\n    line-height: ", "px;\n    color: ", ";\n  }\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n  list-style: none;\n  padding-inline-start: 0;\n  margin: 0;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  border-radius: ", ";\n  box-shadow: 0 0\n    ", ";\n  width: ", "px;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var ListBox = styled.div(_templateObject(), function (_ref) {
  var theme = _ref.theme;
  return theme.RADIUS.rad6;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.TYPO.size.text10 + ' ' + theme.COLORS.shadow;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.SPACING.base * 62;
});
var UserList = styled.ul(_templateObject2());
var UserListItem = styled.li(_templateObject3(), function (_ref4) {
  var theme = _ref4.theme;
  return theme.SPACING.base * 2;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.SPACING.base;
}, function (_ref6) {
  var selected = _ref6.selected,
      theme = _ref6.theme;
  return !selected ? theme.COLORS.background : theme.COLORS.highlight;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.SPACING.base * 8;
}, function (_ref8) {
  var theme = _ref8.theme;
  return theme.TYPO.size.text10;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.SPACING.base * 8;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.TYPO.weight.semiBold;
}, function (_ref11) {
  var theme = _ref11.theme;
  return theme.TYPO.size.text14;
}, function (_ref12) {
  var theme = _ref12.theme;
  return theme.TYPO.weight.semiBold;
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.TYPO.size.text12;
}, function (_ref14) {
  var theme = _ref14.theme;
  return theme.SPACING.base * 8;
}, function (_ref15) {
  var theme = _ref15.theme;
  return theme.COLORS.fontSecondary;
});

var UserWidget = function UserWidget(_ref) {
  var userList = _ref.userList,
      searchTerm = _ref.searchTerm,
      wrapperRef = _ref.wrapperRef,
      cancelSearch = _ref.cancelSearch,
      selectUser = _ref.selectUser;
  var filteredList = userList.filter(function (item) {
    return (item.username.toLowerCase().indexOf(searchTerm) > -1 || item.name.toLowerCase().indexOf(searchTerm) > -1) && item;
  });

  var selectOnClick = function selectOnClick(listIndex) {
    selectUser(filteredList[listIndex].username);
  };

  var _useState = useState(-1),
      highlighted = _useState[0],
      setHighlighted = _useState[1];

  useEffect(function () {
    var handleKeyPress = function handleKeyPress(e) {
      var keyInput = e.key;

      if (keyInput === 'Escape') {
        cancelSearch();
      }

      if (keyInput === 'Tab' || keyInput === 'Enter') {
        e.preventDefault();
        var selectIndex = highlighted < 0 ? 0 : highlighted;
        selectUser(filteredList[selectIndex].username);
      }

      var listLength = filteredList.length;

      if (keyInput === 'ArrowDown') {
        e.preventDefault();
        var next = highlighted + 1;
        setHighlighted(next >= listLength ? next % listLength : next);
      }

      if (keyInput === 'ArrowUp') {
        e.preventDefault();

        var _next = highlighted > -1 ? highlighted - 1 : listLength - 1;

        setHighlighted(_next >= listLength ? _next % listLength : _next);
      }
    };

    var wrapper = wrapperRef;
    wrapper.current.addEventListener('keydown', handleKeyPress);
    return function () {
      if (wrapper.current) {
        wrapper.current.removeEventListener('keydown', handleKeyPress);
      }
    };
  }, [wrapperRef, cancelSearch, filteredList, selectUser, highlighted]);

  if (!filteredList.length) {
    return null;
  }

  return React__default.createElement(ListBox, null, React__default.createElement(UserList, {
    title: 'Tag User'
  }, filteredList.map(function (_ref2, key) {
    var username = _ref2.username,
        avatar_url = _ref2.avatar_url,
        name = _ref2.name;
    return React__default.createElement(UserListItem, {
      selected: key === highlighted,
      key: key,
      onClick: function onClick() {
        return selectOnClick(key);
      },
      onMouseOver: function onMouseOver() {
        return setHighlighted(key);
      }
    }, React__default.createElement("img", {
      src: avatar_url,
      alt: username
    }), React__default.createElement("h3", null, name), React__default.createElement("h5", null, "~@", username));
  })));
};

function useOuterClick(innerRef) {
  var _useState = useState(false),
      isOuter = _useState[0],
      setIsOuter = _useState[1];

  useEffect(function () {
    var handleClickOutside = function handleClickOutside(event) {
      if (innerRef.current && !innerRef.current.contains(event.target)) {
        setIsOuter(true);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return function () {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [innerRef, isOuter]);
  return {
    isOuter: isOuter,
    setIsOuter: setIsOuter
  };
}

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n  margin-top: ", "px;\n  padding ", "px ", "px;\n  background: ", ";\n  border: none;\n  color: ", ";\n  text-align: center;\n  text-decoration: none;\n  font-size: ", ";\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3$1() {
  var data = _taggedTemplateLiteralLoose(["\n  font-family: inherit;\n  display: block;\n  resize: none;\n  background: ", ";\n  height: ", "px;\n  width: ", "px;\n  font-size: ", ";\n  padding: ", "px;\n  border-radius: ", "px;\n  border: none;\n  box-shadow: 0 0\n    ", ";\n  margin-top: ", "px;\n  &:focus {\n    outline: none;\n  }\n"]);

  _templateObject3$1 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$1() {
  var data = _taggedTemplateLiteralLoose(["\n  color: ", ";\n"]);

  _templateObject2$1 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$1() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  justify-content: center;\n  font-family: ", ";\n"]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}
var TextBoxWrapper = styled.div(_templateObject$1(), function (_ref) {
  var theme = _ref.theme;
  return theme.TYPO.fontFamilly.primary;
});
var TextLabel = styled.label(_templateObject2$1(), function (_ref2) {
  var theme = _ref2.theme;
  return theme.COLORS.fontPrimary;
});
var TextArea = styled.textarea(_templateObject3$1(), function (_ref3) {
  var theme = _ref3.theme;
  return theme.COLORS.background;
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.SPACING.base * 20;
}, function (_ref5) {
  var theme = _ref5.theme;
  return theme.SPACING.base * 60;
}, function (_ref6) {
  var theme = _ref6.theme;
  return theme.TYPO.size.text14;
}, function (_ref7) {
  var theme = _ref7.theme;
  return theme.SPACING.base;
}, function (_ref8) {
  var theme = _ref8.theme;
  return theme.SPACING.base;
}, function (_ref9) {
  var theme = _ref9.theme;
  return theme.TYPO.size.text10 + ' ' + theme.COLORS.shadow;
}, function (_ref10) {
  var theme = _ref10.theme;
  return theme.SPACING.base * 2;
});
var Submit = styled.button(_templateObject4(), function (_ref11) {
  var theme = _ref11.theme;
  return theme.SPACING.base;
}, function (_ref12) {
  var theme = _ref12.theme;
  return theme.SPACING.base * 2;
}, function (_ref13) {
  var theme = _ref13.theme;
  return theme.SPACING.base * 3;
}, function (_ref14) {
  var theme = _ref14.theme;
  return theme.COLORS.submitButton;
}, function (_ref15) {
  var theme = _ref15.theme;
  return theme.COLORS.background;
}, function (_ref16) {
  var theme = _ref16.theme;
  return theme.TYPO.size.text14;
});

var TextBox = function TextBox(_ref) {
  var userObjects = _ref.userObjects,
      onSubmitAction = _ref.onSubmitAction,
      labels = _ref.labels;

  var _useState = useState(false),
      searchStarted = _useState[0],
      setSearchStarted = _useState[1];

  var _useState2 = useState(''),
      searchTerm = _useState2[0],
      setSearchTerm = _useState2[1];

  var _useState3 = useState(''),
      textAreaValue = _useState3[0],
      setTextAreaValue = _useState3[1];

  var innerRef = useRef(null);

  var _useOuterClick = useOuterClick(innerRef),
      isOuter = _useOuterClick.isOuter,
      setIsOuter = _useOuterClick.setIsOuter;

  var _useState4 = useState(''),
      selectedUser = _useState4[0],
      setSelectedUser = _useState4[1];

  var _useState5 = useState(['']),
      tagged = _useState5[0],
      setTagged = _useState5[1];

  var label = labels.label,
      placeholder = labels.placeholder,
      submit = labels.submit;

  var cancelSearch = function cancelSearch() {
    setSearchStarted(false);
    setSearchTerm('');
  };

  var handleSubmit = function handleSubmit() {
    if (onSubmitAction) {
      onSubmitAction({
        text: textAreaValue,
        tagged: tagged.length > 1 ? tagged.filter(function (a) {
          return a !== '';
        }) : tagged
      });
    }

    setTagged([]);
    setTextAreaValue('');
  };

  var handleTyping = function handleTyping(e) {
    var userSearch = e.target.value;
    setTextAreaValue(userSearch);

    if (userSearch.indexOf('@') > -1) {
      setSearchStarted(true);
    }

    if (userSearch.indexOf('@') === -1 && searchStarted) {
      cancelSearch();
    }

    if (userSearch.indexOf('@') > -1) {
      var searchArr = userSearch.split('@');
      setSearchTerm(searchArr[searchArr.length - 1] ? searchArr[searchArr.length - 1].toLowerCase() : searchArr[1].toLowerCase());
    }
  };

  useEffect(function () {
    if (isOuter) {
      cancelSearch();
      setIsOuter(false);
    }
  }, [isOuter, setIsOuter]);
  useEffect(function () {
    if (selectedUser !== '') {
      var regex = new RegExp("@" + searchTerm, 'ig');
      var comment = textAreaValue.replace(regex, "" + selectedUser);
      setTagged([].concat(tagged, [selectedUser]));
      setTextAreaValue(comment);
      setSelectedUser('');
      cancelSearch();
    }
  }, [selectedUser, setSelectedUser, textAreaValue, setTextAreaValue, searchTerm, tagged]);
  return React__default.createElement(TextBoxWrapper, {
    ref: innerRef,
    tabIndex: 0
  }, React__default.createElement(TextLabel, {
    htmlFor: 'comment-field'
  }, label, React__default.createElement(TextArea, {
    placeholder: placeholder,
    value: textAreaValue,
    onChange: handleTyping,
    id: 'comment-field'
  }), onSubmitAction && !searchStarted && React__default.createElement(Submit, {
    onClick: handleSubmit
  }, submit), searchStarted && React__default.createElement(UserWidget, {
    selectUser: setSelectedUser,
    wrapperRef: innerRef,
    searchTerm: searchTerm,
    userList: userObjects,
    cancelSearch: cancelSearch
  })));
};

var COLORS = {
  background: '#ffffff',
  highlight: '#D8DADF',
  submitButton: '#5004D9',
  fontPrimary: '#000',
  fontSecondary: 'gray',
  shadow: '#888'
};

var TYPO = {
  fontFamilly: {
    primary: 'Arial, Helvetica, sans-serif'
  },
  size: {
    text5: '5px',
    text10: '10px',
    text12: '12px',
    text14: '14px',
    text16: '16px'
  },
  weight: {
    light: 300,
    normal: 400,
    semiBold: 600,
    bold: 700,
    extraBold: 800,
    black: 900
  },
  transform: {
    lowerCase: 'lowercase',
    none: 'none',
    upperCase: 'uppercase'
  }
};

var SPACING = {
  base: 5
};

var RADIUS = {
  rad4: '4px',
  rad6: '6px',
  rad8: '8px',
  rad25: '25px'
};

var defaults = {
  COLORS: COLORS,
  TYPO: TYPO,
  SPACING: SPACING,
  RADIUS: RADIUS
};

var theme = defaults;

var defalutProps = {
  labels: {
    label: 'Write your comment:',
    placeholder: 'Remember, be nice!',
    submit: 'Submit'
  },
  userObjects: [{
    username: 'df-username',
    avatar_url: 'https://secure.gravatar.com/avatar/f04241571d95d005e4a54f4278670718?d=mm',
    name: 'John Doe'
  }, {
    username: 'df-username2',
    avatar_url: 'https://secure.gravatar.com/avatar/f04241571d95d005e4a54f4278670718?d=mm',
    name: 'John Doe 2'
  }, {
    username: 'df-username3',
    avatar_url: 'https://secure.gravatar.com/avatar/f04241571d95d005e4a54f4278670718?d=mm',
    name: 'John Doe 3'
  }]
};

var CommentBox = function CommentBox(_ref) {
  var userObjects = _ref.userObjects,
      themeOptions = _ref.themeOptions,
      onSubmit = _ref.onSubmit,
      labels = _ref.labels;

  if (themeOptions && typeof themeOptions === 'object') {
    Object.keys(themeOptions).forEach(function (i) {
      theme[i] = _extends({}, theme[i], themeOptions[i]);
    });
  }

  return createElement(ThemeProvider, {
    theme: theme
  }, createElement(TextBox, {
    userObjects: userObjects,
    labels: labels,
    onSubmitAction: onSubmit
  }));
};

CommentBox.defaultProps = defalutProps;

export default CommentBox;
//# sourceMappingURL=index.modern.js.map
